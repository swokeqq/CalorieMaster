import os
from importlib.metadata import EntryPoint

import requests
from dotenv import load_dotenv
from urllib.parse import urlparse
from PIL import Image
import io

load_dotenv()
LOGMEAL_API_KEY = os.getenv('LOGMEAL_API_KEY')
ENDPOINT = "https://api.logmeal.com/v2/image/segmentation/complete"
headers = {'Authorization': 'Bearer ' + LOGMEAL_API_KEY}

def recognize_food(file_path):
    try:
        valid_extensions = ['.jpg', '.jpeg', '.png']
        if not any(file_path.lower().endswith(ext) for ext in valid_extensions):
            return "Неподдерживаемый формат файла. Используйте JPG/PNG."
        response = requests.post(ENDPOINT, files={'image': open(file_path, 'rb')}, headers=headers).json()
        return parse_response(response)

    except Exception as e: return f"Произошла ошибка: {str(e)}"

def parse_response(data):
    try:
        recognition_results = data['segmentation_results'][0]['recognition_results']
        result = max(recognition_results, key=lambda x: x['prob'])
        return (result['name'])

    except KeyError:  return "Не удалось распознать блюдо на фото"



# Пример использования
if __name__ == "__main__":
    file_path = "ogurec.jpg"
    result = recognize_food(file_path)
    print(result)


# response = {'foodFamily': [{'id': 8, 'name': 'vegetables', 'prob': 1.0}], 'foodType': {'id': 2, 'name': 'ingredients'}, 'imageId': 1832070, 'model_versions': {'drinks': 'v1.0', 'foodType': 'v1.0', 'foodgroups': 'v1.0', 'foodrec': 'v1.0', 'ingredients': 'v1.0', 'ontology': 'v1.0', 'segmentation': 'v1.0'}, 'occasion': 'snack', 'occasion_info': {'id': None, 'translation': 'snack'}, 'processed_image_size': {'height': 770, 'width': 800}, 'segmentation_results': [{'center': {'x': 380, 'y': 328}, 'contained_bbox': {'h': 579, 'w': 251, 'x': 255, 'y': 39}, 'food_item_position': 1, 'polygon': [283, 39, 282, 40, 278, 40, 275, 43, 275, 44, 274, 45, 274, 47, 273, 48, 273, 50, 272, 51, 272, 52, 271, 53, 271, 54, 270, 55, 270, 56, 264, 62, 264, 63, 263, 64, 263, 65, 262, 66, 262, 67, 261, 68, 261, 69, 260, 70, 260, 71, 259, 72, 259, 74, 258, 75, 258, 78, 257, 79, 257, 83, 256, 84, 256, 90, 255, 91, 255, 163, 256, 164, 256, 192, 257, 193, 257, 201, 258, 202, 258, 204, 259, 205, 259, 207, 260, 208, 260, 210, 261, 211, 261, 213, 262, 214, 262, 216, 263, 217, 263, 226, 264, 227, 264, 241, 265, 242, 265, 245, 266, 246, 266, 248, 268, 250, 268, 251, 270, 253, 270, 254, 271, 255, 271, 256, 272, 257, 272, 260, 273, 261, 273, 264, 274, 265, 274, 268, 275, 269, 275, 270, 276, 271, 276, 272, 277, 273, 277, 274, 279, 276, 279, 277, 280, 278, 280, 279, 281, 280, 281, 282, 282, 283, 282, 286, 283, 287, 283, 289, 284, 290, 284, 291, 285, 292, 285, 293, 290, 298, 290, 299, 291, 300, 291, 301, 292, 302, 292, 303, 293, 304, 293, 306, 294, 307, 294, 309, 295, 310, 295, 311, 300, 316, 301, 316, 305, 320, 305, 321, 306, 322, 306, 323, 307, 324, 307, 326, 308, 327, 308, 329, 309, 330, 309, 332, 310, 333, 310, 334, 311, 335, 311, 336, 314, 339, 314, 340, 316, 342, 316, 344, 317, 345, 317, 347, 318, 348, 318, 350, 319, 351, 319, 353, 320, 354, 320, 355, 321, 356, 321, 357, 323, 359, 323, 360, 325, 362, 325, 363, 326, 364, 326, 366, 327, 367, 327, 370, 328, 371, 328, 373, 329, 374, 329, 375, 330, 376, 330, 377, 331, 378, 331, 379, 335, 383, 335, 384, 336, 385, 336, 386, 337, 387, 337, 388, 338, 389, 338, 391, 339, 392, 339, 394, 340, 395, 340, 396, 342, 398, 342, 399, 343, 400, 343, 401, 344, 402, 344, 404, 345, 405, 345, 407, 346, 408, 346, 410, 347, 411, 347, 413, 348, 414, 348, 416, 349, 417, 349, 418, 351, 420, 351, 421, 353, 423, 353, 424, 354, 425, 354, 426, 355, 427, 355, 428, 356, 429, 356, 430, 357, 431, 357, 432, 358, 433, 358, 435, 359, 436, 359, 437, 360, 438, 360, 439, 361, 440, 361, 442, 362, 443, 362, 444, 363, 445, 363, 447, 364, 448, 364, 449, 365, 450, 365, 452, 366, 453, 366, 455, 367, 456, 367, 457, 368, 458, 368, 459, 369, 460, 369, 461, 370, 462, 370, 463, 371, 464, 371, 465, 372, 466, 372, 467, 373, 468, 373, 469, 374, 470, 374, 471, 375, 472, 375, 473, 376, 474, 376, 476, 377, 477, 377, 478, 378, 479, 378, 480, 379, 481, 379, 483, 380, 484, 380, 485, 381, 486, 381, 487, 382, 488, 382, 489, 384, 491, 384, 492, 385, 493, 385, 494, 386, 495, 386, 496, 387, 497, 387, 499, 388, 500, 388, 501, 389, 502, 389, 503, 390, 504, 390, 505, 391, 506, 391, 507, 396, 512, 396, 513, 397, 514, 397, 516, 398, 517, 398, 519, 399, 520, 399, 522, 400, 523, 400, 525, 401, 526, 401, 527, 405, 531, 405, 532, 407, 534, 407, 535, 408, 536, 408, 537, 409, 538, 409, 539, 410, 540, 410, 542, 411, 543, 411, 544, 413, 546, 413, 547, 414, 548, 415, 548, 419, 552, 420, 552, 423, 555, 423, 556, 424, 557, 424, 558, 425, 559, 425, 560, 426, 561, 426, 563, 427, 564, 427, 566, 428, 567, 428, 568, 440, 580, 440, 581, 441, 582, 441, 584, 442, 585, 442, 587, 444, 589, 444, 590, 449, 595, 450, 595, 456, 601, 456, 602, 458, 604, 458, 606, 459, 607, 459, 608, 462, 611, 462, 612, 463, 613, 464, 613, 466, 615, 473, 615, 474, 616, 484, 616, 485, 617, 493, 617, 494, 616, 495, 616, 501, 610, 501, 609, 502, 608, 502, 606, 503, 605, 503, 600, 504, 599, 504, 590, 505, 589, 505, 546, 504, 545, 504, 519, 503, 518, 503, 514, 502, 513, 502, 510, 501, 509, 501, 507, 500, 506, 500, 504, 499, 503, 499, 500, 498, 499, 498, 495, 497, 494, 497, 489, 496, 488, 496, 483, 495, 482, 495, 477, 494, 476, 494, 474, 493, 473, 493, 472, 492, 471, 492, 470, 491, 469, 491, 468, 490, 467, 490, 466, 489, 465, 489, 464, 488, 463, 488, 462, 487, 461, 487, 459, 486, 458, 486, 456, 485, 455, 485, 453, 484, 452, 484, 450, 483, 449, 483, 448, 482, 447, 482, 446, 481, 445, 481, 444, 480, 443, 480, 441, 479, 440, 479, 438, 478, 437, 478, 434, 477, 433, 477, 431, 476, 430, 476, 428, 475, 427, 475, 426, 473, 424, 473, 423, 472, 422, 472, 421, 471, 420, 471, 419, 470, 418, 470, 416, 469, 415, 469, 413, 468, 412, 468, 410, 467, 409, 467, 408, 466, 407, 466, 406, 465, 405, 465, 404, 462, 401, 462, 400, 460, 398, 460, 397, 459, 396, 459, 395, 458, 394, 458, 393, 457, 392, 457, 391, 456, 390, 456, 388, 455, 387, 455, 386, 453, 384, 453, 383, 452, 382, 452, 381, 451, 380, 451, 379, 448, 376, 448, 375, 446, 373, 446, 372, 445, 371, 445, 370, 444, 369, 444, 367, 443, 366, 443, 364, 442, 363, 442, 362, 441, 361, 441, 360, 440, 359, 440, 358, 439, 357, 439, 356, 438, 355, 438, 354, 437, 353, 437, 351, 436, 350, 436, 348, 435, 347, 435, 344, 434, 343, 434, 340, 433, 339, 433, 338, 432, 337, 432, 335, 431, 334, 431, 333, 430, 332, 430, 331, 429, 330, 429, 329, 428, 328, 428, 326, 427, 325, 427, 323, 426, 322, 426, 321, 425, 320, 425, 318, 424, 317, 424, 316, 423, 315, 423, 313, 422, 312, 422, 311, 421, 310, 421, 309, 420, 308, 420, 307, 419, 306, 419, 303, 418, 302, 418, 300, 417, 299, 417, 296, 416, 295, 416, 293, 415, 292, 415, 291, 414, 290, 414, 288, 413, 287, 413, 286, 412, 285, 412, 284, 411, 283, 411, 281, 410, 280, 410, 277, 409, 276, 409, 273, 408, 272, 408, 268, 407, 267, 407, 262, 406, 261, 406, 257, 405, 256, 405, 252, 404, 251, 404, 248, 403, 247, 403, 245, 402, 244, 402, 241, 401, 240, 401, 238, 400, 237, 400, 235, 399, 234, 399, 231, 398, 230, 398, 228, 397, 227, 397, 225, 396, 224, 396, 222, 395, 221, 395, 219, 394, 218, 394, 217, 393, 216, 393, 215, 391, 213, 391, 212, 390, 211, 390, 210, 389, 209, 389, 208, 388, 207, 388, 206, 386, 204, 386, 203, 385, 202, 385, 201, 384, 200, 384, 199, 383, 198, 383, 197, 382, 196, 382, 195, 381, 194, 381, 193, 380, 192, 380, 191, 378, 189, 378, 188, 375, 185, 375, 184, 374, 183, 374, 182, 373, 181, 373, 180, 372, 179, 372, 178, 371, 177, 371, 175, 370, 174, 370, 172, 369, 171, 369, 170, 368, 169, 368, 168, 366, 166, 366, 165, 364, 163, 364, 162, 363, 161, 363, 160, 362, 159, 362, 158, 361, 157, 361, 156, 360, 155, 360, 154, 359, 153, 359, 152, 358, 151, 358, 150, 356, 148, 356, 147, 354, 145, 354, 144, 353, 143, 353, 142, 351, 140, 351, 139, 350, 138, 350, 137, 348, 135, 348, 133, 347, 132, 347, 129, 346, 128, 346, 126, 345, 125, 345, 123, 344, 122, 344, 119, 343, 118, 343, 116, 342, 115, 342, 112, 341, 111, 341, 110, 340, 109, 340, 108, 339, 107, 339, 106, 338, 105, 338, 103, 337, 102, 337, 99, 336, 98, 336, 95, 335, 94, 335, 90, 334, 89, 334, 87, 333, 86, 333, 84, 332, 83, 332, 82, 330, 80, 330, 79, 329, 78, 329, 77, 328, 76, 328, 74, 327, 73, 327, 70, 326, 69, 326, 67, 325, 66, 325, 65, 324, 64, 324, 63, 323, 62, 323, 61, 321, 59, 320, 59, 316, 55, 316, 54, 314, 52, 314, 51, 313, 50, 313, 49, 312, 48, 312, 47, 311, 46, 311, 45, 306, 40, 305, 40, 304, 39], 'recognition_results': [{'foodFamily': [{'id': 8, 'name': 'vegetables'}], 'foodType': {'id': 2, 'name': 'ingredients'}, 'hasNutriScore': True, 'id': 1232, 'name': 'cucumber', 'nutri_score': {'nutri_score_category': 'A', 'nutri_score_standardized': 82}, 'prob': 0.6646803615738472, 'subclasses': [{'foodFamily': [{'id': 8, 'name': 'vegetables'}], 'foodType': {'id': 1, 'name': 'food'}, 'hasNutriScore': True, 'id': 181, 'name': 'marinated cold cucumber', 'nutri_score': {'nutri_score_category': 'B', 'nutri_score_standardized': 68}, 'prob': 0.6646803615738472}, {'foodFamily': [{'id': 8, 'name': 'vegetables'}], 'foodType': {'id': 1, 'name': 'food'}, 'hasNutriScore': True, 'id': 1476, 'name': 'cucumber salad', 'nutri_score': {'nutri_score_category': 'A', 'nutri_score_standardized': 82}, 'prob': 0.09441773603723547}]}, {'foodFamily': [{'id': 8, 'name': 'vegetables'}], 'foodType': {'id': 1, 'name': 'food'}, 'hasNutriScore': True, 'id': 1476, 'name': 'cucumber salad', 'nutri_score': {'nutri_score_category': 'A', 'nutri_score_standardized': 82}, 'prob': 0.09441773603723547, 'subclasses': [{'foodFamily': [{'id': 8, 'name': 'vegetables'}], 'foodType': {'id': 1, 'name': 'food'}, 'hasNutriScore': True, 'id': 181, 'name': 'marinated cold cucumber', 'nutri_score': {'nutri_score_category': 'B', 'nutri_score_standardized': 68}, 'prob': 0.09441773603723547}, {'foodFamily': [{'id': 8, 'name': 'vegetables'}], 'foodType': {'id': 1, 'name': 'food'}, 'hasNutriScore': True, 'id': 2398, 'name': 'fennel salad', 'nutri_score': {'nutri_score_category': 'A', 'nutri_score_standardized': 82}, 'prob': 0.09441773603723547}, {'foodFamily': [{'id': 8, 'name': 'vegetables'}], 'foodType': {'id': 1, 'name': 'food'}, 'hasNutriScore': True, 'id': 31, 'name': 'celery salad', 'nutri_score': {'nutri_score_category': 'A', 'nutri_score_standardized': 88}, 'prob': 0.09441773603723547}]}, {'foodFamily': [{'id': 8, 'name': 'vegetables'}], 'foodType': {'id': 2, 'name': 'ingredients'}, 'hasNutriScore': True, 'id': 1182, 'name': 'zucchini', 'nutri_score': {'nutri_score_category': 'A', 'nutri_score_standardized': 82}, 'prob': 0.0925636040880712, 'subclasses': [{'foodFamily': [{'id': 8, 'name': 'vegetables'}], 'foodType': {'id': 1, 'name': 'food'}, 'hasNutriScore': True, 'id': 2710, 'name': 'grilled zucchini', 'nutri_score': {'nutri_score_category': 'A', 'nutri_score_standardized': 82}, 'prob': 0.0925636040880712}]}, {'foodFamily': [{'id': 8, 'name': 'vegetables'}], 'foodType': {'id': 2, 'name': 'ingredients'}, 'hasNutriScore': True, 'id': 1540, 'name': 'radish', 'nutri_score': {'nutri_score_category': 'A', 'nutri_score_standardized': 82}, 'prob': 0.07631503402265871, 'subclasses': [{'foodFamily': [{'id': 8, 'name': 'vegetables'}], 'foodType': {'id': 2, 'name': 'ingredients'}, 'hasNutriScore': True, 'id': 2700, 'name': 'pickled radish', 'nutri_score': {'nutri_score_category': 'A', 'nutri_score_standardized': 81}, 'prob': 0.07631503402265871}]}, {'foodFamily': [{'id': 8, 'name': 'vegetables'}], 'foodType': {'id': 2, 'name': 'ingredients'}, 'hasNutriScore': True, 'id': 1226, 'name': 'lettuce', 'nutri_score': {'nutri_score_category': 'A', 'nutri_score_standardized': 86}, 'prob': 0.07202326427818728, 'subclasses': [{'foodFamily': [{'id': 8, 'name': 'vegetables'}], 'foodType': {'id': 1, 'name': 'food'}, 'hasNutriScore': True, 'id': 2720, 'name': 'boiled endives', 'nutri_score': {'nutri_score_category': 'A', 'nutri_score_standardized': 90}, 'prob': 0.07202326427818728}, {'foodFamily': [{'id': 8, 'name': 'vegetables'}], 'foodType': {'id': 1, 'name': 'food'}, 'hasNutriScore': True, 'id': 2721, 'name': 'grilled endives', 'nutri_score': {'nutri_score_category': 'A', 'nutri_score_standardized': 90}, 'prob': 0.07202326427818728}, {'foodFamily': [{'id': 8, 'name': 'vegetables'}], 'foodType': {'id': 2, 'name': 'ingredients'}, 'hasNutriScore': True, 'id': 1544, 'name': 'salad', 'nutri_score': {'nutri_score_category': 'A', 'nutri_score_standardized': 86}, 'prob': 0.07202326427818728}, {'foodFamily': [{'id': 8, 'name': 'vegetables'}], 'foodType': {'id': 2, 'name': 'ingredients'}, 'hasNutriScore': True, 'id': 1196, 'name': 'endives', 'nutri_score': {'nutri_score_category': 'A', 'nutri_score_standardized': 82}, 'prob': 0.07202326427818728}, {'foodFamily': [{'id': 8, 'name': 'vegetables'}], 'foodType': {'id': 2, 'name': 'ingredients'}, 'hasNutriScore': True, 'id': 1263, 'name': 'rucula', 'nutri_score': {'nutri_score_category': 'A', 'nutri_score_standardized': 82}, 'prob': 0.07202326427818728}, {'foodFamily': [{'id': 8, 'name': 'vegetables'}], 'foodType': {'id': 2, 'name': 'ingredients'}, 'hasNutriScore': True, 'id': 1240, 'name': 'canons', 'nutri_score': {'nutri_score_category': 'A', 'nutri_score_standardized': 82}, 'prob': 0.07202326427818728}, {'foodFamily': [{'id': 8, 'name': 'vegetables'}], 'foodType': {'id': 2, 'name': 'ingredients'}, 'hasNutriScore': True, 'id': 1242, 'name': 'chicory', 'nutri_score': {'nutri_score_category': 'A', 'nutri_score_standardized': 86}, 'prob': 0.07202326427818728}]}]}]}
# recognition_results = response['segmentation_results'][0]['recognition_results']
# best_match = max(recognition_results, key=lambda x: x['prob'])
# print(f"Блюдо: {best_match['name']}")
